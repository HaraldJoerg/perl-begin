#include '../template.wml'

<latemp_subject "Perl for Writing Chat Robots and Scripts (IRC, Jabber, etc.)" />

<h2 id="intro">Introduction</h2>

<p>
Since the advent of the <a href="$(ROOT)/irc/">IRC - the Internet Relay
Chat protocol</a>, people have been automating it by writing dedicated
robots or "bots", which are computer programs that sit an Internet host 
somewhere and perform various functions. Examples for that are chat bots,
which are used for amusement, infobots, which are used to collect various 
and handily recall commonly used factoids, mathbots which can perform
mathematical operations, and evalbots which are used to evaluate code in
certain programming languages, but there are many others including many
multi-purpose bots.
</p>

<p>
While IRC used to be considered a place for people who either wanted
to waste time or were web low-life, it more recently gained much more
mainstream acceptance among open-source users and contributors and to some
extent some more Internet users who are more laymen computer-wise. And
even more recently, there has been some proliferation of different protocols
for instant messaging or chat, such as the open-source 
<a href="http://en.wikipedia.org/wiki/Extensible_Messaging_and_Presence_Protocol">Jabber/XMPP protocol</a>, which has gained some further popularity after
it has been supported by providers such as Google Talk / Google Chat and
Facebook.com. 
</p>

<p>
So <b>what about Perl?</b> Perl allows one to write such robots and other
forms of chat scripting (such as progrmaming special IRC or Jabber client 
commands) with ease, and many active Perl programmers and contributors have
got their feet wet in Perl after using it to write a simple bot or a chat
script.
</p>

<h2 id="irc">For IRC</h2>

<p>
If you want to write something for IRC, take these recommendations to heart:
</p>

<ol>

<li>
Don't parse the IRC protocol directly (using regular expressions or whatever).
Use a module.
</li>

<li>
<b>Don't use Net-IRC</b> which is very limited, broken, and is unmaintained.
</li>

</ol>

<p>
There are many bad examples doing that on the web, and you should not follow
them if you want to write your own robot or script from scratch. If you want
to contribute to an existing codebase that uses these legacy methods, please
make it a priority to convert it to a more modern IRC framework.
</p>

<h2 id="POE-Component-IRC"><a href="http://search.cpan.org/dist/POE-Component-IRC/">POE-Component-IRC</a></h2>

<p>
POE-Component-IRC (or PoCoIrc for short) has been the first successuful
attempt at providing a decent IRC framework for Perl based on
<a href="$(ROOT)/uses/multitasking/#poe">the POE networking and
multi-tasking framework for Perl</a>.
</p>

<p>
Especially of note is
<a href="http://search.cpan.org/dist/Bot-BasicBot/">Bot-BasicBot</a> which is
a layer above POE-Component-IRC that is more user-friendly and straightfoward
for writing a bot.
</p>

<h2 id="xmpp">For XMPP/Jabber</h2>

<p>
The following modules can be used to interact with the XMPP / Jabber protocol,
which has become popular for instant messaging with such providers as
GChat/GTalk, and Facebook.
</p>

<ul>

<li>
<b><cpan_self_dist d="Net-XMPP" /></b> - a generic module for talking
using XMPP and Jabber.
</li>

<li>

</li>

</ul>
