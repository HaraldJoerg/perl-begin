<ul>
    <li> Perl is compiled, and has compile-time checks.  These checks
    just aren't as nasty as in some other languages.

    <li> <code>use strict</code> turns on all sorts of compile-time checks
    that will save you someday.  Always use it.

    <li> <code>use warnings</code> also picks up on all sorts of good
    stuff.  Some are compile-time warnings, and some are run-time
    warnings.

    <li> Unsure of whether an error message or warning is from the
    compiler or runtime? <code>perldoc perldiag</code>, or <code>use
    diagnostics</code> while you're developing.

    <li> <code>use</code> is compile-time. <code>require</code> is runtime.
    So <code>use</code> does compile-time checking on modules you import,
    whereas <code>require</code> doesn't.  Don't use <code>require</code>.

    <li> mod_perl caches the compiled Perl opcodes, which is why it's
    so amazingly fast.  The opcodes are still interpreted, but that
    takes far less time than launching a new process + compiling the
    code.
</ul>

<%attr>
title => 'Things to remember'
</%attr>
